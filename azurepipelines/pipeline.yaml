trigger:
- main

resources:
- repo: self

variables:
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  repo: "projektzespolowy"

stages:
- stage: Terraform
  jobs:
  - job: TerraformJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan
      displayName: 'Terraform init, plan and apply'
      workingDirectory: Terraform

    - task: PowerShell@2
      displayName: 'Set Terraform Outputs as Pipeline Variables'
      name: TfOutput
      inputs:
        workingDirectory: Terraform
        targetType: 'inline'
        script: |
          $outputs = terraform output -json | ConvertFrom-Json
          foreach ($key in $outputs.PSObject.Properties.Name) {
            $value = $outputs.$key.value
            $sanitizedKey = $key -replace '\.', '_'
            Write-Host $sanitizedKey
            Write-Host $value
            Write-Host "##vso[task.setvariable variable=$sanitizedKey]$value"
            echo "published variable $sanitizedKey"
          }
        pwsh: true

    - task: Docker@2
      inputs:
        repository: $(container_registry_login_server)/$(repo)
        command: 'buildAndPush'
        Dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

    - task: AzureCLI@2
      inputs:
        azureSubscription: ProjektZespolowySC
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group <TwojaGrupaZasobow> --name <TwojeAKSClusterName>
          kubectl set image deployment/<deploymentName> <containerName>=$(containerRegistry)/$(imageRepository):$(tag)
